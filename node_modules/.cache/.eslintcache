[{"C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\index.js":"1","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\App.js":"2","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\app\\store.js":"3","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\services\\cryptoNewsApi.js":"4","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\services\\cryptoApi.js":"5","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\index.js":"6","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\Homepage.jsx":"7","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\Navbar.jsx":"8","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\News.jsx":"9","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\Exchanges.jsx":"10","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\Cryptocurrencies.jsx":"11","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\CryptoDetails.jsx":"12","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\Loader.jsx":"13","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\LineChart.jsx":"14"},{"size":444,"mtime":1640935114000,"results":"15","hashOfConfig":"16"},{"size":1457,"mtime":1651002157107,"results":"17","hashOfConfig":"16"},{"size":321,"mtime":1640935114000,"results":"18","hashOfConfig":"16"},{"size":764,"mtime":1651001798139,"results":"19","hashOfConfig":"16"},{"size":1328,"mtime":1640935114000,"results":"20","hashOfConfig":"16"},{"size":316,"mtime":1640935114000,"results":"21","hashOfConfig":"16"},{"size":1855,"mtime":1651001721401,"results":"22","hashOfConfig":"16"},{"size":1773,"mtime":1651001360362,"results":"23","hashOfConfig":"16"},{"size":2431,"mtime":1651001426316,"results":"24","hashOfConfig":"16"},{"size":1764,"mtime":1651004288066,"results":"25","hashOfConfig":"16"},{"size":1959,"mtime":1651001661684,"results":"26","hashOfConfig":"16"},{"size":5351,"mtime":1651001632277,"results":"27","hashOfConfig":"16"},{"size":156,"mtime":1640935114000,"results":"28","hashOfConfig":"16"},{"size":1446,"mtime":1640935114000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ar3p6l",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\index.js",[],"C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\App.js",[],"C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\app\\store.js",[],"C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\services\\cryptoNewsApi.js",["64"],"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoNewsHeaders = {\n  'x-bingapis-sdk': 'true',\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\n  'x-rapidapi-host': process.env.REACT_APP_NEWS_RAPIDAPI_HOST,\n};\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: 'cryptoNewsApi',\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_NEWS_API_URL }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\services\\cryptoApi.js",[],"C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\index.js",[],"C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\Homepage.jsx",["65","66"],"import React from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Cryptocurrencies from './Cryptocurrencies';\nimport News from './News';\nimport Loader from './Loader';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">Global Crypto Stats</Title>\n      <Row gutter={[32, 32]}>\n      <Col span={12}> <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\n        <Col span={12}><Statistic title=\"Total Market Cap:\" value={`$${millify(globalStats.totalMarketCap)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total 24h Volume\" value={`$${millify(globalStats.total24hVolume)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Top 10 Cryptos In The World</Title>\n        <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show more</Link></Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Latest Crypto News</Title>\n        <Title level={3}><Link to=\"/news\">Show more</Link></Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default Homepage;","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\Navbar.jsx",[],"C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\News.jsx",["67"],"import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport moment from 'moment';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\nimport Loader from './Loader';\n\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto for News\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\n            {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\n                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n              </div>\n              <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\n                </div>\n                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\Exchanges.jsx",["68","69","70","71","72","73"],"import React from 'react';\nimport millify from 'millify';\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport HTMLReactParser from 'html-react-parser';\n\nimport { useGetExchangesQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n // Note: To access this endpoint you need premium plan\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n       <Row>\n         {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.uuid}\n                showArrow={false}\n                header={(\n                  <Row key={exchange.uuid}>\n                    <Col span={6}>\n                      <Text><strong>{exchange.rank}.</strong></Text>\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\n                      <Text><strong>{exchange.name}</strong></Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                  )}\n              >\n                {HTMLReactParser(exchange.description || '')}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))} \n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\Cryptocurrencies.jsx",["74"],"import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins);\n\n    const filteredData = cryptosList?.data?.coins.filter((item) => item.name.toLowerCase().includes(searchTerm));\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value.toLowerCase())}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col\n            xs={24}\n            sm={12}\n            lg={6}\n            className=\"crypto-card\"\n            key={currency.uuid}\n          >\n\n            {/* Note: Change currency.id to currency.uuid  */}\n            <Link key={currency.uuid} to={`/crypto/${currency.uuid}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {currency.change}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\CryptoDetails.jsx",["75","76"],"import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\nimport LineChart from './LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timeperiod, setTimeperiod] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\n  const cryptoDetails = data?.data?.coin;\n \n  if (isFetching) return <Loader />;\n\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails?.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails?.volume && millify(cryptoDetails?.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${cryptoDetails?.allTimeHigh?.price && millify(cryptoDetails?.allTimeHigh?.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails?.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails?.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: cryptoDetails?.supply?.confirmed ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${cryptoDetails?.supply?.circulating && millify(cryptoDetails?.supply?.circulating)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.symbol}) Price\n        </Title>\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\n      </Col>\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails?.price)} coinName={cryptoDetails?.name} />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">{link.type}</Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;","C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\Loader.jsx",[],"C:\\Users\\91790\\OneDrive\\Desktop\\Crypto Sathi Stat\\src\\components\\LineChart.jsx",[],{"ruleId":"77","severity":2,"message":"78","line":21,"column":56,"nodeType":"79","messageId":"80","fix":"81"},{"ruleId":"82","severity":2,"message":"83","line":23,"column":7,"nodeType":"84","messageId":"85","endLine":23,"endColumn":22,"fix":"86"},{"ruleId":"77","severity":2,"message":"78","line":44,"column":25,"nodeType":"79","messageId":"80","fix":"87"},{"ruleId":"77","severity":2,"message":"78","line":62,"column":21,"nodeType":"79","messageId":"80","fix":"88"},{"ruleId":"82","severity":2,"message":"89","line":26,"column":8,"nodeType":"84","messageId":"85","endLine":26,"endColumn":13,"fix":"90"},{"ruleId":"82","severity":2,"message":"91","line":28,"column":11,"nodeType":"84","messageId":"85","endLine":28,"endColumn":26,"fix":"92"},{"ruleId":"93","severity":2,"message":"94","line":50,"column":12,"nodeType":"79","messageId":"95","endLine":50,"endColumn":13,"fix":"96"},{"ruleId":"97","severity":2,"message":"98","line":51,"column":7,"nodeType":"99","messageId":"100","endLine":51,"endColumn":13,"fix":"101"},{"ruleId":"82","severity":2,"message":"102","line":51,"column":7,"nodeType":"99","messageId":"85","endLine":51,"endColumn":13,"fix":"103"},{"ruleId":"77","severity":2,"message":"78","line":56,"column":26,"nodeType":"79","messageId":"80","fix":"104"},{"ruleId":"77","severity":2,"message":"78","line":64,"column":33,"nodeType":"79","messageId":"80","fix":"105"},{"ruleId":"93","severity":2,"message":"94","line":21,"column":1,"nodeType":"79","messageId":"95","endLine":21,"endColumn":2,"fix":"106"},{"ruleId":"77","severity":2,"message":"78","line":105,"column":30,"nodeType":"79","messageId":"80","fix":"107"},"eol-last","Newline required at end of file but not found.","Program","missing",{"range":"108","text":"109"},"react/jsx-indent","Expected indentation of 8 space characters but found 6.","JSXOpeningElement","wrongIndent",{"range":"110","text":"111"},{"range":"112","text":"109"},{"range":"113","text":"109"},"Expected indentation of 6 space characters but found 7.",{"range":"114","text":"115"},"Expected indentation of 11 space characters but found 10.",{"range":"116","text":"117"},"no-trailing-spaces","Trailing spaces not allowed.","trailingSpace",{"range":"118","text":"119"},"react/jsx-closing-tag-location","Expected closing tag to match indentation of opening.","JSXClosingElement","matchIndent",{"range":"120","text":"121"},"Expected indentation of 7 space characters but found 6.",{"range":"122","text":"121"},{"range":"123","text":"109"},{"range":"124","text":"109"},{"range":"125","text":"119"},{"range":"126","text":"109"},[764,764],"\n",[636,642],"        ",[1855,1855],[2431,2431],[742,749],"      ",[799,809],"           ",[1707,1708],"",[1709,1715],"       ",[1709,1715],[1764,1764],[1959,1959],[956,957],[5351,5351]]