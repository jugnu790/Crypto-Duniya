{"ast":null,"code":"import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';// Note: Change v1 to v2 on rapid api\nvar cryptoApiHeaders={'x-rapidapi-host':process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,'x-rapidapi-key':process.env.REACT_APP_RAPIDAPI_KEY};var createRequest=function createRequest(url){return{url:url,headers:cryptoApiHeaders};};export var cryptoApi=createApi({reducerPath:'cryptoApi',baseQuery:fetchBaseQuery({baseUrl:process.env.REACT_APP_CRYPTO_API_URL}),endpoints:function endpoints(builder){return{getCryptos:builder.query({query:function query(count){return createRequest(\"/coins?limit=\".concat(count));}}),getCryptoDetails:builder.query({query:function query(coinId){return createRequest(\"/coin/\".concat(coinId));}}),// Note: Change the coin price history endpoint from this - `coin/${coinId}/history/${timeperiod} to this - `coin/${coinId}/history?timeperiod=${timeperiod}`\ngetCryptoHistory:builder.query({query:function query(_ref){var coinId=_ref.coinId,timeperiod=_ref.timeperiod;return createRequest(\"coin/\".concat(coinId,\"/history?timeperiod=\").concat(timeperiod));}}),// Note: To access this endpoint you need premium plan\ngetExchanges:builder.query({query:function query(){return createRequest('/exchanges');}})};}});var useGetCryptosQuery=cryptoApi.useGetCryptosQuery,useGetCryptoDetailsQuery=cryptoApi.useGetCryptoDetailsQuery,useGetExchangesQuery=cryptoApi.useGetExchangesQuery,useGetCryptoHistoryQuery=cryptoApi.useGetCryptoHistoryQuery;export{useGetCryptosQuery,useGetCryptoDetailsQuery,useGetExchangesQuery,useGetCryptoHistoryQuery};","map":{"version":3,"sources":["C:/Users/91790/OneDrive/Desktop/Crypto Sathi Stat/src/services/cryptoApi.js"],"names":["createApi","fetchBaseQuery","cryptoApiHeaders","process","env","REACT_APP_CRYPTO_RAPIDAPI_HOST","REACT_APP_RAPIDAPI_KEY","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","baseUrl","REACT_APP_CRYPTO_API_URL","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,cAApB,KAA0C,8BAA1C,CAEA;AAEA,GAAMC,CAAAA,gBAAgB,CAAG,CACvB,kBAAmBC,OAAO,CAACC,GAAR,CAAYC,8BADR,CAEvB,iBAAkBF,OAAO,CAACC,GAAR,CAAYE,sBAFP,CAAzB,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,QAAU,CAAEA,GAAG,CAAHA,GAAF,CAAOC,OAAO,CAAEP,gBAAhB,CAAV,EAAtB,CAEA,MAAO,IAAMQ,CAAAA,SAAS,CAAGV,SAAS,CAAC,CACjCW,WAAW,CAAE,WADoB,CAEjCC,SAAS,CAAEX,cAAc,CAAC,CAAEY,OAAO,CAAEV,OAAO,CAACC,GAAR,CAAYU,wBAAvB,CAAD,CAFQ,CAGjCC,SAAS,CAAE,mBAACC,OAAD,QAAc,CACvBC,UAAU,CAAED,OAAO,CAACE,KAAR,CAAc,CACxBA,KAAK,CAAE,eAACC,KAAD,QAAWZ,CAAAA,aAAa,wBAAiBY,KAAjB,EAAxB,EADiB,CAAd,CADW,CAKvBC,gBAAgB,CAAEJ,OAAO,CAACE,KAAR,CAAc,CAC9BA,KAAK,CAAE,eAACG,MAAD,QAAYd,CAAAA,aAAa,iBAAUc,MAAV,EAAzB,EADuB,CAAd,CALK,CASvB;AACAC,gBAAgB,CAAEN,OAAO,CAACE,KAAR,CAAc,CAC9BA,KAAK,CAAE,wBAAGG,CAAAA,MAAH,MAAGA,MAAH,CAAWE,UAAX,MAAWA,UAAX,OAA4BhB,CAAAA,aAAa,gBAASc,MAAT,gCAAsCE,UAAtC,EAAzC,EADuB,CAAd,CAVK,CAcvB;AACAC,YAAY,CAAER,OAAO,CAACE,KAAR,CAAc,CAC1BA,KAAK,CAAE,uBAAMX,CAAAA,aAAa,CAAC,YAAD,CAAnB,EADmB,CAAd,CAfS,CAAd,EAHsB,CAAD,CAA3B,CAwBA,GACLkB,CAAAA,kBADK,CAKHf,SALG,CACLe,kBADK,CAELC,wBAFK,CAKHhB,SALG,CAELgB,wBAFK,CAGLC,oBAHK,CAKHjB,SALG,CAGLiB,oBAHK,CAILC,wBAJK,CAKHlB,SALG,CAILkB,wBAJK,C","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// Note: Change v1 to v2 on rapid api\n\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\n};\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_CRYPTO_API_URL }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n\n    // Note: Change the coin price history endpoint from this - `coin/${coinId}/history/${timeperiod} to this - `coin/${coinId}/history?timeperiod=${timeperiod}`\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history?timeperiod=${timeperiod}`),\n    }),\n\n    // Note: To access this endpoint you need premium plan\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges'),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery,\n  useGetCryptoHistoryQuery,\n} = cryptoApi;\n"]},"metadata":{},"sourceType":"module"}